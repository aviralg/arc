#+TITLE: Aviral's Emacs Configuration
#+AUTHOR: Aviral Goel
#+STARTUP: showeverything
#+OPTIONS: toc:2

* Table of Contents :toc:
- [[#principles][Principles]]
- [[#installation][Installation]]
  - [[#rg][rg]]
- [[#package-management][Package Management]]
- [[#interface-enhancement][Interface Enhancement]]
  - [[#dashboard][dashboard]]
    - [[#study-the-different-configuration-variables-and-change-the-logo][Study the different configuration variables, and change the logo.]]

* Principles

1. Use builtin features wherever possible.
2. Add a package iff the benefit outweighs its setup cost.
3. Prefer packages by influential package writers such as ~protesilaos~,
   ~@minad~, ~@tarsius~, ~@abo-abo~, ~@jwiegly~, and ~bbatsov~.
4. Consult ~@spacemacs~ and ~@doom~ for package configuration.

* Installation

** rg

:PROPERTIES:
:URL: https://github.com/BurntSushi/ripgrep
:END:

#+begin_src shell
  brew install ripgrep
#+end_src

* Package Management

Set package archives, refresh package database, and provide function to
conditionally install packages.

#+begin_src elisp
  (setq package-archives
        '(("melpa" . "https://melpa.org/packages/")
          ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)

  (unless package-archive-contents
    (package-refresh-contents))

  ;; programmatically install/ensure installed
  ;; pkgs in your personal list
  (defun package-require (package)
    (unless (package-installed-p package)
      (package-install package)))
#+end_src


* Interface Enhancement

** dashboard

:PROPERTIES:
:URL: [[https://github.com/emacs-dashboard/emacs-dashboard]]
:END:

Set a sensible startup screen that displays recently visited files, projects, bookmarks, agenda, and registers.

*** TODO Study the different configuration variables, and change the logo.

#+begin_src elisp
  (package-require 'dashboard)
  ;; Set the title
  (setq dashboard-banner-logo-title "")
  ;; Set the banner
  (setq dashboard-startup-banner 'logo)

  ;; Content is not centered by default. To center, set
  (setq dashboard-center-content t)

  (setq initial-buffer-choice (lambda () (get-buffer-create "*dashboard*")))

  (setq dashboard-items '((recents  . 5)
                          (projects . 5)
                          (bookmarks . 5)
                          (registers . 5)
                          (agenda . 5)))


  ;;(setq dashboard-display-icons-p t) ;; display icons on both GUI and terminal
  ;;(setq dashboard-icon-type 'nerd-icons) ;; use `nerd-icons' package
  ;; TODO: enable this after bug is fixed
  ;; https://github.com/emacs-dashboard/emacs-dashboard/issues/459
  ;;(setq dashboard-set-heading-icons t)
  ;;(setq dashboard-set-file-icons t)

  (setq dashboard-set-navigator t)
  (setq dashboard-set-init-info t)
  (setq dashboard-set-footer nil)
  (setq dashboard-projects-switch-function 'projectile-persp-switch-project)
  ;;(setq dashboard-week-agenda t)
  (setq dashboard-filter-agenda-entry 'dashboard-no-filter-agenda)

  (dashboard-setup-startup-hook)
#+end_src

