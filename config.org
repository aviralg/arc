#+TITLE: Aviral's Emacs Configuration
#+AUTHOR: Aviral Goel
#+STARTUP: showeverything
#+OPTIONS: toc:2

* Table of Contents :toc:
- [[#principles][Principles]]
- [[#installation][Installation]]
  - [[#rg][rg]]
- [[#package-management][Package Management]]
- [[#interface-enhancement][Interface Enhancement]]
  - [[#dashboard][dashboard]]
    - [[#study-the-different-configuration-variables-and-change-the-logo][Study the different configuration variables, and change the logo.]]
  - [[#pulsar][pulsar]]
    - [[#check-consult-after-jump-hook-after-consult-is-installed][check 'consult-after-jump-hook after consult is installed.]]
  - [[#volatile-highlights][volatile-highlights]]
    - [[#figure-out-how-to-vhldefine-extension-for-vundo][figure out how to `vhl/define-extension` for `vundo`]]
    - [[#find-better-alternatives-to-this-package][find better alternatives to this package]]
- [[#git][Git]]
    - [[#--evaluate-gited-dired-git-info-and-satchel-from-elpa][- evaluate gited, dired-git-info, and satchel from ELPA]]
  - [[#git-modes][git-modes]]
  - [[#git-timemachine][git-timemachine]]
  - [[#git-messenger][git-messenger]]
  - [[#git-undo][git-undo]]
  - [[#git-link][git-link]]
  - [[#diff-hl][diff-hl]]
    - [[#figure-out-dired-mode-support-and-diff-hl-show-hunk-mouse-mode][figure out dired mode support and diff-hl-show-hunk-mouse-mode]]
  - [[#magit][magit]]
  - [[#forge][forge]]
    - [[#setup-forge-keybindings][setup forge keybindings]]
  - [[#magit-todos][magit-todos]]
    - [[#--magit-todos-mode-should-be-activated-in-a-magit-buffer][- ~magit-todos-mode~ should be activated in a magit buffer.]]
  - [[#magit-lfs][magit-lfs]]
- [[#miscellaneous][Miscellaneous]]
  - [[#copy-as-format][copy-as-format]]
    - [[#figure-out-keybindings-for-other-formats-or-remove-all-keybindings][figure out keybindings for other formats or remove all keybindings]]

* Principles

1. Use builtin features wherever possible.
2. Add a package iff the benefit outweighs its setup cost.
3. Prefer packages by influential package writers such as ~protesilaos~,
   ~@minad~, ~@tarsius~, ~@abo-abo~, ~@jwiegly~, and ~bbatsov~.
4. Consult ~@spacemacs~ and ~@doom~ for package configuration.

* Installation

** rg

:PROPERTIES:
:URL: https://github.com/BurntSushi/ripgrep
:END:

#+begin_src shell
  brew install ripgrep
#+end_src

* Package Management

Set package archives, refresh package database, and provide function to
conditionally install packages.

#+begin_src elisp
  (setq package-archives
        '(("melpa" . "https://melpa.org/packages/")
          ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)

  (unless package-archive-contents
    (package-refresh-contents))

  ;; install package if not already installed
  (defun package-require (&rest packages)
    (dolist (package packages)
      (unless (package-installed-p package)
        (package-install package))))
#+end_src


* Interface Enhancement

** dashboard

:PROPERTIES:
:URL: [[https://github.com/emacs-dashboard/emacs-dashboard]]
:END:

Set a sensible startup screen that displays recently visited files, projects, bookmarks, agenda, and registers.

*** TODO Study the different configuration variables, and change the logo.

#+begin_src elisp
  (package-require 'dashboard)
  ;; Set the title
  (setq dashboard-banner-logo-title "")
  ;; Set the banner
  (setq dashboard-startup-banner 'logo)

  ;; Content is not centered by default. To center, set
  (setq dashboard-center-content t)

  (setq initial-buffer-choice (lambda () (get-buffer-create "*dashboard*")))

  (setq dashboard-items '((recents  . 5)
                          (projects . 5)
                          (bookmarks . 5)
                          (registers . 5)
                          (agenda . 5)))


  ;;(setq dashboard-display-icons-p t) ;; display icons on both GUI and terminal
  ;;(setq dashboard-icon-type 'nerd-icons) ;; use `nerd-icons' package
  ;; TODO: enable this after bug is fixed
  ;; https://github.com/emacs-dashboard/emacs-dashboard/issues/459
  ;;(setq dashboard-set-heading-icons t)
  ;;(setq dashboard-set-file-icons t)

  (setq dashboard-set-navigator t)
  (setq dashboard-set-init-info t)
  (setq dashboard-set-footer nil)
  (setq dashboard-projects-switch-function 'projectile-persp-switch-project)
  ;;(setq dashboard-week-agenda t)
  (setq dashboard-filter-agenda-entry 'dashboard-no-filter-agenda)

  (dashboard-setup-startup-hook)
#+end_src

** pulsar

:PROPERTIES:
:URL: https://github.com/protesilaos/pulsar
:END:

Pulse highlight line on demand or after running select functions.

*** TODO check 'consult-after-jump-hook after consult is installed.

#+begin_src elisp
  (package-require 'pulsar)

  ;; Check the default value of `pulsar-pulse-functions'.  That is where
  ;; you add more commands that should cause a pulse after they are
  ;; invoked

  (setq pulsar-pulse t)
  (setq pulsar-delay 0.055)
  (setq pulsar-iterations 10)
  (setq pulsar-face 'pulsar-magenta)
  (setq pulsar-highlight-face 'pulsar-yellow)

  (pulsar-global-mode 1)

  (add-hook 'next-error-hook #'pulsar-pulse-line)
  (add-hook 'minibuffer-setup-hook #'pulsar-pulse-line)

  ;; integration with the `consult' package:
  (add-hook 'consult-after-jump-hook #'pulsar-recenter-top)
  (add-hook 'consult-after-jump-hook #'pulsar-reveal-entry)

  ;; integration with the built-in `imenu':
  (add-hook 'imenu-after-jump-hook #'pulsar-recenter-top)
  (add-hook 'imenu-after-jump-hook #'pulsar-reveal-entry)

  ;; pulsar does not define any key bindings.  This is just a sample that
  ;; respects the key binding conventions.  Evaluate:
  ;;
  ;;     (info "(elisp) Key Binding Conventions")
  ;;
  ;; The author uses C-x l for `pulsar-pulse-line' and C-x L for
  ;; `pulsar-highlight-line'.
  ;;
  ;; You can replace `pulsar-highlight-line' with the command
  ;; `pulsar-highlight-dwim'.
  (let ((map global-map))
    (define-key map (kbd "C-c h p") #'pulsar-pulse-line)
    (define-key map (kbd "C-c h h") #'pulsar-highlight-line))
#+end_src

** volatile-highlights

:PROPERTIES:
:URL: https://github.com/k-talo/volatile-highlights.el
:END:

Bring visual feedback to cut, copy, paste, occur, and search.

*** TODO figure out how to `vhl/define-extension` for `vundo`
*** TODO find better alternatives to this package

#+begin_src elisp
  (package-require 'volatile-highlights)

  (volatile-highlights-mode t)

  ;; undo-tree
  ;;(with-eval-after-load 'undo-tree
  ;;  (vhl/define-extension 'undo-tree
  ;;                        'undo-tree-move
  ;;                        'undo-tree-yank)
  ;;  (vhl/install-extension 'undo-tree)
  ;;  (vhl/load-extension 'undo-tree)))
#+end_src


* TODO Git

*** TODO - evaluate gited, dired-git-info, and satchel from ELPA

** git-modes

:PROPERTIES:
:URL: https://github.com/magit/git-modes
:END:

#+begin_src elisp
  (package-require 'git-modes)
  (add-to-list 'auto-mode-alist
             (cons "/.dockerignore\\'" 'gitignore-mode))
#+end_src

** git-timemachine

:PROPERTIES:
:URL: https://codeberg.org/pidu/git-timemachine
:END:

#+begin_src elisp
  (package-require 'git-timemachine)
#+end_src

** TODO git-messenger

:PROPERTIES:
:URL: https://github.com/emacsorphanage/git-messenger
:END:

#+begin_src elisp
  (package-require 'git-messenger)

  (global-set-key (kbd "C-x v p") 'git-messenger:popup-message)
  ;; TODO - (define-key git-messenger-map (kbd "m") 'git-messenger:copy-message)
  ;; Use magit-show-commit for showing status/diff commands
  (custom-set-variables '(git-messenger:use-magit-popup t))
#+end_src

** TODO git-undo

:PROPERTIES:
:URL: https://github.com/jwiegley/git-undo-el
:END:

#+begin_src elisp
  ;; TODO - download this manually (package-require 'git-undo)
#+end_src

** git-link

:PROPERTIES:
:URL: https://github.com/sshaw/git-link
:END:

#+begin_src elisp
  (package-require 'git-link)
  (global-set-key (kbd "C-c g l") 'git-link)
#+end_src

** diff-hl

:PROPERTIES:
:URL: https://github.com/dgutov/diff-hl
:END:

*** TODO figure out dired mode support and diff-hl-show-hunk-mouse-mode

#+begin_src elisp
  (package-require 'diff-hl)
  (global-diff-hl-mode)
  (add-hook 'magit-pre-refresh-hook 'diff-hl-magit-pre-refresh)
  (add-hook 'magit-post-refresh-hook 'diff-hl-magit-post-refresh)
  (add-hook 'dired-mode-hook 'diff-hl-dired-mode)
  (diff-hl-show-hunk-mouse-mode)
#+end_src

** magit

:PROPERTIES:
:URL: https://magit.vc
:END:

#+begin_src elisp
  (package-require 'magit)
#+end_src

** TODO forge

*** TODO setup forge keybindings

:PROPERTIES:
:URL: https://magit.vc
:END:

#+begin_src elisp
  (package-require 'magit 'forge)
#+end_src

** TODO magit-todos

:PROPERTIES:
:URL: https://github.com/alphapapa/magit-todos
:END:

*** TODO - ~magit-todos-mode~ should be activated in a magit buffer.

#+begin_src elisp
  (package-require 'async
                   'dash
                   'f
                   'hl-todo
                   'magit
                   'pcre2el
                   's
                   'magit-todos)
  (magit-todos-mode)
#+end_src

** magit-lfs

:PROPERTIES:
:URL: https://github.com/Ailrun/magit-lfs
:END:

#+begin_src elisp
  (package-require 'magit-lfs)
#+end_src

* Miscellaneous

** copy-as-format

:PROPERTIES:
:URL: https://github.com/sshaw/copy-as-format
:END:

*** TODO figure out keybindings for other formats or remove all keybindings

#+begin_src elisp
  (package-require 'copy-as-format)
  (global-set-key (kbd "C-c w s") 'copy-as-format-slack)
  (global-set-key (kbd "C-c w g") 'copy-as-format-github)
#+end_src

